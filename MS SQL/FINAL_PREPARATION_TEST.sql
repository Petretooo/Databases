CREATE DATABASE UNIVERSITY_1

CREATE TABLE STUDENTS(
FAC_NO CHAR(10) PRIMARY KEY NOT NULL,
NAME VARCHAR(50) NOT NULL
)

CREATE TABLE LECTURES(
LEC_ID INT PRIMARY KEY NOT NULL,
NAME VARCHAR(30) NOT NULL
)

CREATE TABLE ASSESSMENTS(
FAC_NO CHAR(10) FOREIGN KEY REFERENCES STUDENTS ON DELETE CASCADE NOT NULL,
LEC_ID INT FOREIGN KEY REFERENCES LECTURES ON DELETE CASCADE NOT NULL
PRIMARY KEY(FAC_NO, LEC_ID)
)

ALTER TABLE ASSESSMENTS
ADD RATING INT CHECK(RATING >= 2 AND RATING <= 6)

INSERT INTO STUDENTS(FAC_NO, NAME)
VALUES('1801325060', 'JOHN')
INSERT INTO LECTURES(LEC_ID, NAME)
VALUES(1, 'Math')
INSERT INTO ASSESSMENTS(FAC_NO, LEC_ID, RATING)
VALUES('1801325060', 1, 4)

INSERT INTO ASSESSMENTS(FAC_NO, RATING)
VALUES('1801325060', 6) ---TESTING----

DELETE FROM STUDENTS
WHERE FAC_NO = '1812345678'

SELECT s.NAME, s.FAC_NO, a.RATING
FROM STUDENTS s
JOIN ASSESSMENTS a
ON s.FAC_NO = a.FAC_NO
ORDER BY s.NAME

SELECT l.NAME, COUNT(a.FAC_NO)
FROM LECTURES l
LEFT JOIN ASSESSMENTS a
ON l.LEC_ID = a.LEC_ID
GROUP BY l.NAME

CREATE VIEW VIEW_STUDENTS
AS
SELECT s.FAC_NO, s.NAME, AVG(a.RATING) as AVG_ASSESSMENTS
FROM STUDENTS s
JOIN ASSESSMENTS a
ON s.FAC_NO = a.FAC_NO
GROUP BY s.FAC_NO, s.NAME
HAVING AVG(A.RATING) > 5

SELECT * FROM VIEW_STUDENTS