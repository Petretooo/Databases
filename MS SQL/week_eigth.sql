CREATE VIEW COUNTRY_REGION_VIEW
AS
SELECT DISTINCT c.NAME AS COUNTRY_NAME, r.NAME AS REGION_NAME
FROM COUNTRIES c
LEFT JOIN REGIONS r
ON c.REGION_ID = r.REGION_ID
LEFT JOIN CUSTOMERS cu
ON c.COUNTRY_ID = cu.COUNTRY_ID
LEFT JOIN DEPARTMENTS d
ON c.COUNTRY_ID = d.COUNTRY_ID
WHERE D.COUNTRY_ID IS NULL AND CU.COUNTRY_ID IS NULL

SELECT * FROM COUNTRY_REGION_VIEW




CREATE VIEW DEPARMENTS_VIEW
AS
SELECT NAME, COUNT(EMPLOYEE_ID) AS EMP_COUNT, MAX(SALARY) AS SALARY
FROM DEPARTMENTS D
JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY NAME


SELECT * FROM DEPARMENTS_VIEW





SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 105

BEGIN TRAN

INSERT INTO PRODUCTS(PRODUCT_ID, NAME, PRICE)
VALUES(1, 'AAA', 100)

UPDATE EMPLOYEES
SET SALARY += 100
WHERE EMPLOYEE_ID = 105

COMMIT

CREATE TRIGGER PRODUCT_INSERT
ON PRODUCTS
AFTER INSERT
AS
SELECT * 
FROM inserted


INSERT INTO PRODUCTS
VALUE(2, 'BBB', 200, 'FASAF')










CREATE PROCEDURE PRODUCT_NAME
AS 
SELECT DISTINCT NAME
FROM PRODUCTS P 
JOIN ORDER_ITEMS OI
ON P.PRICE = OI.PRODUCT_ID

EXECUTE PRODUCT_NAME







CREATE PROC CUST_ORDERS @CUST_ID INT
AS 
SELECT FNAME + ' ' + LNAME, COUNT(ORDER_ID) AS COUNT
FROM CUSTOMERS C
JOIN ORDERS O
ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE C.CUSTOMER_ID = @CUST_ID
GROUP BY C.CUSTOMER_ID, FNAME + ' ' + LNAME

EXEC CUST_ORDERS @CUST_ID = 104







SELECT * FROM EMPLOYEES



ALTER PROCEDURE CUST_ORDERS @CUST_ID INT
AS
SELECT FNAME + ' ' + LNAME, ORDER_ID, SUM(UNIT_PRICE * QUANTITY)
FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.CUSTOMER_ID = O.ORDER_ID
JOIN ORDER_ITEMS OI
ON O.ORDER_ID = OI.ORDER_ID
WHERE C.CUSTOMER_ID = @CUST_ID
GROUP BY C.CUSTOMER_ID, FNAME + ' ' + LNAME, O.ORDER_ID



SELECT NAME, PRICE
FROM PRODUCTS
WHERE NAME LIKE 'M%' AND PRICE > 50
ORDER BY PRICE DESC;


SELECT E.FNAME, E.LNAME, D.NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.SALARY > ALL (SELECT SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID = 20)

SELECT JOB_TITLE, COUNT(EMPLOYEE_ID) AS COUNT_EMPL
FROM JOBS J
JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID
GROUP BY JOB_TITLE
ORDER BY 2 DESC

SELECT C.FNAME, C.LNAME
FROM CUSTOMERS C
LEFT JOIN ORDERS O
ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE C.GENDER = 'F' AND O.ORDER_ID IS NULL


